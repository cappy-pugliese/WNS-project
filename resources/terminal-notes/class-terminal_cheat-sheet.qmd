---
title: "class terminal cheat sheet"
format: pdf
editor: visual
---

## xanadu

#### account info

-   username: eeb5300usr14

-   password: eeb#0125

-   home: /home/FCAM/eeb5300/usr14

aliases

|      |                                |
|------|--------------------------------|
| bash | runs low mem bash session      |
| sq   | shows my jobs that are running |
| ll   | long list edited               |

#### commands

|  |  |
|------------------------------------|------------------------------------|
| ssh eeb5300usr14\@xanadu-submit-ext.cam.uchc.edu | login (ssheeb) |
| srun --partition=mcbstudent --qos=mcbstudent --pty bash | reg bash session |
| scp path/to/data.tar.gz eeb5300usr14\@transfer.cam.uchc.edu:\<Path/to/Destination\> | transfering files from laptop to cluster |
| sbatch \<file_name\> | submits script to slurm |
| squeue -u eeb5300usr14 | look at jobs running |
| seff \[job id\] | shows summary of job efficiency |
|  |  |
|  |  |

-   sinfo and squeue

gitlab key

-   ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFL5dCDP2J1h5S+FB+1eRKwcG/AZ7wwLX1rqlEz6RQn2

awk

awk '{ print \$1, \$3}' file

## Gitlab

-   cloning gitlab using terminal

    -   git clone git\@gitlab.com:\<url.git\>

-   branches

    -   git branch \<new branch name\>

    -   git checkout \<branch name\>

    -   git branch (shows what branch you are on)

<!-- -->

-   Pushing to git

    -   git add

        -   pushes edits to staging area

        -   can add single file or single directory (by typing name after command)

        -   git add . will add everything except deleted files

        -   git add -A

    -   git status

        -   can see files in the staging area

    -   git commit

        -   pushes stage data to git repository

        -   git commit -m \<message explaining commit\>

    -   git fetch origin

        -   gets origin repository information

    -   git diff origin/\<branch name\> \<branch name\>

        -   looks at differences between two reposititories

        -   origin/branch is the online repository

    -   git pull origin \<branch name\>

        -   pulls from online repository

    -   git push -u origin --all

        -   pushes everything online

-   pulling everything over from origin (overrides local directory)

    ```         
    git fetch --all
    git branch backup-main
    git reset --hard origin/main
    ```

    -   deleting local branch:

        ```         
        git branch -d <branch_name>

        # uppercase -D will force delete the branch
        ```

```         
'!a[$1]++' <- awk's version of uniq
```